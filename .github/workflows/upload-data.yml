
name: upload-data

on:
  push:
    branches: [ master, develop, upload-data ]
  schedule:
    - cron: '0 */3 * * *'

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-docker-images: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v4

      - name: Download ccache
        run: |
          ./release.sh download -p data/ccache -n ccache
        working-directory: server

      - name: Build
        run: |
          ONLY_BUILD=true COMMAND=build-all docker-compose -f docker-compose.yml -f docker-compose.build.yml up 2>&1 | tee docker-compose.log
        working-directory: server

      - name: Print result
        run: |
          grep -B 100 -A 3 -e "Error 1" -e "\[fail\]" docker-compose.log || true
          ls data/crawl-master | xargs
          ! grep -q -e "Error 1" -e "\[fail\]" docker-compose.log
        working-directory: server

      - name: Push image
        run: |
          TIMESTAMP=$(date -u +"%y%m%d%H%M")
          docker tag refracta/dcss-server:latest refracta/dcss-server:$TIMESTAMP
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker push refracta/dcss-server:latest
          docker push refracta/dcss-server:$TIMESTAMP
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        working-directory: server

      - name: Upload data
        run: |
          ./release.sh upload -p data/ccache -n ccache -T "ccache (from Action)" -b ${{ github.ref_name }}
          ./release.sh delete -n ccache -l 3
          rm -rf data/ccache
          ./release.sh upload -p data -n game-data -T "game-data (from Action)" -b ${{ github.ref_name }}
          ./release.sh delete -n game-data -l 3
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: server
