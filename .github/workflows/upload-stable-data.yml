name: upload-stable-data

on:
  push:
    branches: [ stable, upload-stable-data ]
  schedule:
    - cron: '0 * * * *'

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-docker-images: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v4

      - name: Build image
        run: |
          docker compose build 2>&1 | tee docker-compose.log
        working-directory: server

      - name: Download ccache
        run: |
          docker compose run --rm -e CMD='$SCRIPTS/utils/release.sh download -p /data/ccache -n stable-ccache' dcss-server 2>&1 | tee docker-compose.log
        working-directory: server

      - name: Build games
        run: |
          docker compose run --rm -e CMD='$SCRIPTS/game/install-crawl-versions.sh' dcss-server 2>&1 | tee docker-compose.log
        working-directory: server

      - name: Print result
        run: |
          grep -B 100 -A 3 -e "Error 1" -e "\[fail\]" docker-compose.log || true
          ls data/crawl-master | xargs
          ! grep -q -e "Error 1" -e "\[fail\]" docker-compose.log
        working-directory: server

      - name: Push image
        run: |
          TIMESTAMP=$(date -u +"%y%m%d%H%M")
          docker tag refracta/dcss-server:latest refracta/dcss-server:stable
          docker tag refracta/dcss-server:latest refracta/dcss-server:stable-$TIMESTAMP
          echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker push refracta/dcss-server:stable-$TIMESTAMP
          docker push refracta/dcss-server:stable
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        working-directory: server

      - name: Upload data
        run: |
          GH_TOKEN=$GH_TOKEN docker compose run --rm -e CMD='$SCRIPTS/utils/clean-ccache.sh' dcss-server
          GH_TOKEN=$GH_TOKEN docker compose run --rm -e CMD='$SCRIPTS/utils/release.sh upload -p /data/ccache -n stable-ccache -T "stable-ccache (from Action)" -b ${{ github.sha }}' dcss-server
          GH_TOKEN=$GH_TOKEN docker compose run --rm -e CMD='$SCRIPTS/utils/release.sh delete -n stable-ccache -l 3' dcss-server
          sudo rm -rf data/{ccache,config}
          GH_TOKEN=$GH_TOKEN docker compose run --rm -e CMD='$SCRIPTS/utils/release.sh upload -p /data -n stable-game-data -T "stable-game-data (from Action)" -b ${{ github.sha }}' dcss-server
          GH_TOKEN=$GH_TOKEN docker compose run --rm -e CMD='$SCRIPTS/utils/release.sh delete -n stable-game-data -l 3' dcss-server
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: server
